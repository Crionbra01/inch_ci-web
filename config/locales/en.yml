en:
  navigation:
    brand: "# Inch CI"
    home: Home
    learn_more: Learn more
    report_card: Report card
    what_is_this: What is this about?
    signin: "Sign in with GitHub"
    signout: "Sign out"

  badge:
    image_format:
      png: PNG
      svg: SVG
    image_style:
      default: Default
      flat: Flat
      flat-square: "Square style"
      shields: "shields.io style"
    markup_format:
      image_url: "Image URL:"
      md: "Markdown:"
      textile: "Textile:"
      rdoc: "RDoc:"
    choose_hint: "<b>Styles:</b> Choose the one fitting your lifestyle!"
    pro_hint: "<b>Pro-Tip:</b> "
  grade_list_table:
    header_A: "Seems really good"
    header_B: "Proper documentation present"
    header_C: "Please take a look"
    header_U: "Undocumented"
    grade_icon_hint: "Grade"
    location_in_name: "in %{filename}"
    priority_icon_hint: "Priority"
    show_more: "Show %{more_count} more ..."
  shared:
    back_link: Back
    twitter_text: "Docs badges for %{project_language} projects:"
    twitter_text_wo_project: "Docs badges for Ruby projects:"
    code_object_roles:
      # legacy roles:
      object:
        without_doc: "Add a comment describing the %{object_type}."
        without_code_example: "Add a code example (optional)."
        without_return_type: "You could add the object\'s return type."
        without_return_description: "You could describe the return value."
      method_parameter:
        without_mention: "Describe the parameter \"%{ref_name}\"."
        without_type: ""
      method:
        without_return_type: ""
        without_return_description: "Describe what \"%{ref_name}\" returns."
      constant:
        without_doc: ""
        without_code_example: ""
      # modern roles:
      ruby:
        object:
          without_doc: "Add a comment describing the %{object_type}."
          without_code_example: "Add a code example (optional)."
          without_return_type: "You could add the object\'s return type."
          without_return_description: "You could describe the return value."
        method_parameter:
          without_mention: "Describe the parameter \"%{ref_name}\"."
          without_type: ""
        method:
          without_return_type: ""
          without_return_description: "Describe what \"%{ref_name}\" returns."
        constant:
          without_doc: ""
          without_code_example: ""
      elixir:
        object:
          without_doc: "Add a comment describing the %{object_type}."
          without_code_example: "Add a code example (optional)."
          without_return_type: "You could add the object\'s return type."
          without_return_description: "You could describe the return value."
        function_parameter:
          without_mention: "Describe the parameter \"%{ref_name}\"."
          without_type: ""
        function:
          without_return_type: ""
          without_return_description: "Describe what \"%{ref_name}\" returns."
        constant:
          without_doc: ""
          without_code_example: ""
      java_script:
        object:
          without_doc: "Add a comment describing the %{object_type}."
          without_code_example: "Add a code example (optional)."
          without_return_type: "You could add the object\'s return type."
          without_return_description: "You could describe the return value."
        function_parameter:
          without_mention: "Describe the parameter \"%{ref_name}\"."
          without_type: ""
        function:
          without_return_type: ""
          without_return_description: "Describe what \"%{ref_name}\" returns."
        constant:
          without_doc: ""
          without_code_example: ""
    title: "Inch CI - Documentation badges for Ruby & Elixir projects - Show off your docs"
    footer: |
      Inch CI evaluates your project's inline code documentation and reports grades for each class, module and method.

      It is an [open source project](https://github.com/inch-ci/inch_ci-web),
      created by René Föhring ([@rrrene](https://twitter.com/rrrene)),
      based on [Inch](http://trivelop.de/inch).

      Please [create an issue](https://github.com/inch-ci/inch_ci-web/issues/new) if anything seems broken or worthy of improvement.

  welcome:
    headline: "Documentation badges for Ruby & Elixir"
    abstract: |
      Thanks to [Travis](http://travis-ci.org), the community champions testing.

      Thanks to [Code Climate](http://codeclimate.com), we refactor constantly.

      But there is no way to lint and show off your inline docs. Until now.
    signin_hint: "You can also add your projects via GitHub:"
    abstract2: |
      Let's raise the visibility of code documentation in Ruby & Elixir!

      Because better inline docs mean easier contribution and more collaboration!
    featured_elixir_projects: "Now with Elixir support:"
    featured_ruby_projects: "Join hundreds of Ruby projects!"
    learn_more: "Learn more"
    project_placeholder: rrrene/inch
    project_hint: "Simply type your GitHub username/reponame"
    add_project: "Evaluate"
  about:
    headline: "What is Inch CI?"
    abstract: |
      This project is an attempt to raise the visibility of documentation in Open Source. It provides badges to include in your project's README, to show people that documenting code is a cool thing.

      The badges are based on Inch and look like this:
      ![Inline docs](%{badge_image_url})
       Get yours below!

      ## What is this "Inch"?

      Inch is a documentation measurement tool for Ruby that was created to help people document their code.
      It is a command-line utility that gives grades based on how complete the docs are ([screenshots](http://trivelop.de/inch)).

      ## What is the goal?

      I really think that posting these badges in a project's README will benefit the project (because people can see that it's well documented) and the community by improving the visibility of documentation.

      Let's start a discussion, let's raise the visibility of documentation, let's talk.

      ## Wait, who's behind this?

      I'm [@rrrene](https://twitter.com/rrrene), creator of [sparkr](http://trivelop.de/sparkr) and [Inch](http://trivelop.de/inch).

      If you have any questions or suggestions: Hit me up [on Twitter](https://twitter.com/rrrene) or [create an issue](https://github.com/inch-ci/inch_ci-web) in the Inch CI project.
  help_header:
    headline: Configuration
  help_configuration_yaml:
    headline: ".inch.yml file - include/exclude stuff"
    body1: |
      By default, Inch looks into `{app,lib}/**/*.rb` for Ruby source files.

      You can configure which files and objects Inch considers by creating a file named `.inch.yml` in your project directory:
    body2: |
      As you would expect, `included` sets an array of included files (or globs). This way you can point Inch to where your sources are, if they are not in `app/` or `lib/`.

      `excluded` sets an array of files (or globs) to exclude files from the evaluation.

  help_configuration_json:
    headline: "inch.json file - include/exclude stuff"
    body1: |
      By default, Inch looks into `lib/` and `src/` for JavaScript source files.

      You can configure which files and objects Inch considers by creating a file named `inch.json` in your project directory:
    body2: |
      As you would expect, `included` sets an array of included files (or globs). This way you can point Inch to where your sources are, if they are not in `lib/` or `src/`.

      `excluded` sets an array of files (or globs) to exclude files from the evaluation.

  help_webhook:
    headline: How to configure a webhook for Inch CI
    abstract: Using this technique your project is build everytime you push changes to GitHub.
    howto1: "Go to the *Settings* page of your repository:"
    howto2: "Select the *Webhooks and Services* submenu:"
    howto3: "Click the *Add webhook* button ..."
    howto4: "... and use http://inch-ci.org/rebuild as Payload URL:"
    howto5: "Click *Add webhook* and you are good to go!"

  builds:
    status:
      deffered: "prepare"
    index:
      title: Recent builds
      title_with_project: "Recent builds for %{project_name}"
      running_header: "Running <small>(%{count})</small>"
      scheduled_header: "Scheduled <small>(%{count})</small>"
      completed_header: Completed
      finished_ago: "%{time_ago} ago"
    dashboard:
      title: Dashboard
      today_header: Today
      yesterday_header: Yesterday
      other_header: Other
  code_objects:
    show:
      docstring_header: "Parsed documentation:"
      suggestions_header: "Suggestions:"
      no_suggestions_header: "No suggestions."
      view_on_github: "View on Github"
      issue_hint:
        text: "Please help! %{link} if this assessment is incorrect."
        link: "Open an issue on GitHub"
  users:
    show:
      title: "%{name} (@%{user_name})"
      empty_hint: "Your projects have not yet been synced."
      sync_hint: "Your GitHub projects have last been synced: %{time_ago} ago."
      only_public_hint: "<p>Showing only <strong>public, none-forked</strong> projects you own.</p><p>Add any other project by typing its <code>username/repo</code>:</p>"
      sync_now: "Sync now!"
      hook_create: "Add webhook"
      hook_create_hint: "Inch CI will update the badge whenever you push code to GitHub."
      hook_remove: "Webhook: enabled"
      evaluate_now: "Evaluate"
      add_project:
        header: "Add forked/organization projects"
        intro: "You can add any project by typing it's full name below:"
        placeholder: "username/repo"
        submit: "Evaluate"
      languages:
        Ruby:
          header: "Ruby projects"
          intro: "Inch was originally designed to evaluate the inline-docs of Ruby projects"
        Elixir:
          header: "Elixir projects"
          intro: "Inch CI can now also evaluate Elixir projects, but they have to be build by Travis"
          how_to_build: "How to configure Travis to build this project"
        JavaScript:
          header: "JavaScript projects"
          intro: "The next language to be supported by Inch CI"
          how_to_build: "How to join the JavaScript beta"
        other:
          header: "Other projects"
          intro: "Here you see all your other none-forked projects"


  projects:
    create:
      url_not_found: "No project was found under that URL."
    form_edit:
      label:
        language: "Language:"
        documentation_url: "Documentation URL:"
      submit: "Save changes"
    topbar:
      info:
        build_number: "Build"
        builds_all: "(%{link})"
        builds_link: "all"
        build_status: "Status"
        running_time: "Started"
        branch_name: Branch
        revision_uid: Revision
        language: Language
        edit_all: "(%{link})"
        edit_link: "change"
        edit_submit: "Change"
        edit_signin_hint: "Only the owner of this project can change the evaluation language. Please sign in via GitHub."
        message: Message
        author_name: Author
        documentation_url: Documentation
        source_code_url: Source
      profile_link: "← Back to my projects"
      rebuild_link: Refresh
      rebuild_link_tooltip: "Re-evaluate this project's docs"
      rebuild_on_travis_link: Build via Travis
      rebuild_on_travis_link_tooltip: "Learn how-to re-evaluate this project's docs"
      feedback_link: Feedback
      feedback_link_tooltip: "Post questions, suggestions, and bugs"
      tweet_link: Tweet
      tweet_link_tooltip: Spread the word!
      update_info_link: "Update branches & info"
    wait_for_build:
      info: "Your page is currently building. This page will refresh automatically (can take up to a minute)."
    start_build:
      info: "This is not evaluated yet. Press 'Refresh' to evaluate now!"
      javascript_sources_not_found:  |
        It seems that Inch can't find the sources on this project.

        ### Can I tell Inch which files to evaluate?

        No problemo! [Learn how ...](/howto/configuration_json)
    subnavi:
      history: History
      show: Evaluation
      suggestions: Suggestions <span class=badge>%{suggestion_count}</span>
    page:
      about1: |
        ## Let's raise the visibility of documentation in Open Source!

        This page is for <code>%{project_nwo}</code> and is part of a project called "Inch CI", showing documentation measurements provided by [Inch](http://trivelop.de/inch).
        <span style="white-space: nowrap;">Inch CI</span> also provides a badge: <img src="%{badge_image_url}">
        <small>(<a href="https://github.com/rrrene/inch-pages/commit/51555d50d21e234fa240fc9920cf7c27310ff542">not counting</a> low priority objects)</small>

      about2: |
        ### Can I have my own badges?

        [Sure!](/)

      about_help: |
        ### Can I tell Inch which files to evaluate?

        No problemo! [Learn how ...](/howto/configuration)

        ### Can I configure a webhook for continuous integration?

        Of course! [Learn how ...](/howto/webhook)
      about4: |
        ### What is the goal of this?

        I really think that posting badges for documentation in READMEs will benefit you (because ***people can see that your project is well documented***) and our community in general by improving the visibility of documentation.


        Let's start a discussion, let's raise the visibility of documentation, let's talk.

        ***Suggestions, feedback, critique***: <a target="_blank" href="https://twitter.com/rrrene">Hit me up on Twitter</a> or <a target="_blank" href="%{new_issue_url}">via issue</a>.
